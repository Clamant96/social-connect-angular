{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.url = environment.service + environment.port;\n      /* CRIA UM TOKEN, PARA REALIZAR A AUTENTICACAO DO ENDPOINT, POR MEIO DO METODO Authorization, PASSANDO COMO PAREMTRO O TOKEN DO USUARIO LOGADO */\n\n      this.autorizacao = {\n        headers: new HttpHeaders().set('Authorization', localStorage.getItem('token') || '') //headers: new HttpHeaders().set('Authorization', environment.token)\n\n      };\n    }\n\n    entrar(login) {\n      return this.http.post(`${this.url}/usuarios/logar`, login);\n    }\n\n    cadastrar(cadastro) {\n      return this.http.post(`${this.url}/usuarios/cadastrar`, cadastro);\n    }\n\n    atualizar(atualizacao) {\n      atualizacao.img = environment.nomeUplaodImagem;\n      return this.http.put(`${this.url}/usuarios/atualizar`, atualizacao);\n    }\n\n    pesquisaUsuario(pesquisa) {\n      return this.http.get(`${this.url}/usuarios/username/${pesquisa}`, this.autorizacao);\n    }\n\n    logado() {\n      let login = false;\n\n      if (environment.token != '') {\n        login = true;\n      }\n\n      return login;\n    }\n\n    logout() {\n      environment.id = 0;\n      environment.nome = '';\n      environment.img = '';\n      environment.biografia = '';\n      environment.senha = '';\n      environment.site = '';\n      environment.token = '';\n      environment.username = '';\n      localStorage.removeItem('token');\n      this.router.navigate(['/login']);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}