{"ast":null,"code":"import { environment } from 'src/environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let UtilService = /*#__PURE__*/(() => {\n  class UtilService {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.url = `${environment.service}${environment.port}`;\n    }\n\n    carregaImagem(username, img) {\n      if (username == null || username == '' || img == null || img == '') {\n        return '';\n      }\n\n      if (img.includes(\"person_perfil_vazio\")) {\n        return img;\n      } // BASE 64\n\n\n      username = this.encodeBytesToBase64(username);\n      img = this.encodeBytesToBase64(img);\n      return `${this.url}/image/carregar/${username}/${img}`;\n    }\n\n    encodeBytesToBase64(bytes) {\n      const binString = btoa(bytes);\n      return btoa(binString);\n    }\n\n    ajustaLike(postagem, idUsuario) {\n      let retorno = \"\";\n      postagem.likePostagem.map(p => {\n        if (p.id == idUsuario) {\n          retorno = \"preenche-like\";\n        }\n      });\n      return retorno;\n    }\n\n    renderizaBotao(postagem, idUsuario) {\n      let retorno = false;\n      postagem.likePostagem.map(p => {\n        if (p.id == idUsuario) {\n          retorno = true;\n        }\n      });\n      return retorno;\n    }\n\n    disponibilizaEdicaoPerfil(id, idLoop) {\n      let trava = false;\n\n      if (id == idLoop) {\n        trava = true;\n      } else {\n        trava = false;\n      }\n\n      return trava;\n    }\n\n    logoutUsuario() {\n      this.authService.logout();\n    }\n\n    validaData(dataStory) {\n      const dataAtual = new Date().toLocaleDateString();\n      const conversaoDataStory = new Date(dataStory).toLocaleDateString('pt-BR');\n\n      if (conversaoDataStory == dataAtual) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    carregaImagemStory(dado) {\n      if (dado == null || dado == '') {\n        return '';\n      }\n\n      if (dado.includes(\"person_perfil_vazio\")) {\n        return dado;\n      }\n\n      let infoUsuario = dado.split('/'); // BASE 64\n\n      let username = this.encodeBytesToBase64(infoUsuario[0]);\n      let img = this.encodeBytesToBase64(infoUsuario[1]);\n      return `${this.url}/image/carregar/${username}/${img}`;\n    }\n\n    defineUrlPerfilUsuarioLogado() {\n      let retorno = \"/meu-perfil/\";\n\n      if (window.document.URL.includes(\"meu-perfil\")) {\n        retorno = \"/perfil/\";\n      } else if (window.document.URL.includes(\"/perfil\")) {\n        retorno = \"/meu-perfil/\";\n      }\n\n      return retorno;\n    }\n\n    defineUrlRoteamentoGerenciamentoDeCarregamento(id) {\n      if (window.document.URL.includes(\"home\")) {\n        this.router.navigate(['/pagina-inicial']);\n      } else if (window.document.URL.includes(\"pagina-inicial\")) {\n        this.router.navigate(['/home']);\n      } else if (window.document.URL.includes(\"meu-perfil\")) {\n        this.router.navigate(['/perfil/', id]);\n      } else if (window.document.URL.includes(\"/perfil\")) {\n        let idUrl = Number(window.document.URL.split('/')[window.document.URL.split('/').length - 1]);\n        this.router.navigate(['/meu-perfil/', idUrl]);\n      }\n    }\n\n  }\n\n  UtilService.ɵfac = function UtilService_Factory(t) {\n    return new (t || UtilService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n\n  UtilService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UtilService,\n    factory: UtilService.ɵfac,\n    providedIn: 'root'\n  });\n  return UtilService;\n})();","map":null,"metadata":{},"sourceType":"module"}